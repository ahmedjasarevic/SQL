LEKCIJA 1.
Find the title of each film  // SELECT Title FROM movies;
Find the director of each film // SELECT Director FROM movies;
Find the title and director of each film // SELECT Title,Director FROM movies;
Find the title and year of each film // SELECT Title,Year FROM movies;
Find all the information about each film  // SELECT * FROM movies;

LEKCIJA 2.
Find the movie with a row id of 6 // SELECT Title FROM movies WHERE ID = 6;
Find the movies released in the years between 2000 and 2010 // SELECT Title FROM movies WHERE Year >= 2000 AND Year <= 2010
Find the movies not released in the years between 2000 and 2010 // SELECT Title FROM movies WHERE Year NOT BETWEEN  2000 AND 2010
Find the first 5 Pixar movies and their release year // SELECT Title FROM movies WHERE ID >= 1 AND ID <= 5

LEKCIJA 3.
Find all the Toy Story movies // SELECT Title FROM movies WHERE Title LIKE "Toy%";
Find all the movies directed by John Lasseter // SELECT Title FROM movies WHERE Director LIKE "John%";
Find all the movies (and director) not directed by John Lasseter // SELECT Title FROM movies WHERE Director NOT LIKE "John%";
Find all the WALL-* movies // SELECT Title FROM movies WHERE Title  LIKE "Wall%";

LEKCIJA 4.
List all directors of Pixar movies (alphabetically), without duplicates //  SELECT DISTINCT Director FROM movies ORDER BY Director ASC;
List the last four Pixar movies released (ordered from most recent to least) // SELECT  Title FROM movies ORDER BY Year DESC LIMIT 4;
List the first five Pixar movies sorted alphabetically  // SELECT  Title FROM movies ORDER BY Title ASC LIMIT 5;
List the next five Pixar movies sorted alphabetically  // SELECT  Title FROM movies ORDER BY Title ASC LIMIT 5,5;

LEKCIJA 5.

List all the Canadian cities and their populations // SELECT City,Population FROM north_american_cities WHERE Country = "Canada";
Order all the cities in the United States by their latitude from north to south // SELECT City FROM north_american_cities WHERE Country = "United States" 
ORDER BY LATITUDE DESC;
List all the cities west of Chicago, ordered from west to east // SELECT City FROM north_american_cities WHERE LONGITUDE < -87.629798
ORDER BY LONGITUDE ASC;
List the two largest cities in Mexico (by population) // SELECT City FROM north_american_cities WHERE Country = "Mexico" ORDER BY POPULATION DESC LIMIT 2;
List the third and fourth largest cities (by population) in the United States and their population // SELECT City,Population FROM north_american_cities WHERE Country = "United States" ORDER BY POPULATION DESC LIMIT 2,2;

LEKCIJA 6.
Find the domestic and international sales for each movie // SELECT Movies.Id, Movies.Title,Boxoffice.Domestic_sales, Boxoffice.International_sales
FROM Movies INNER JOIN Boxoffice 
ON Movies.Id = Boxoffice.Movie_id
ORDER BY Id ASC;
Show the sales numbers for each movie that did better internationally rather than domestically  // SELECT Movies.Title, Boxoffice.Domestic_sales, Boxoffice.International_sales
FROM Movies 
JOIN Boxoffice 
ON Movies.Id = Boxoffice.Movie_id
WHERE Boxoffice.Domestic_sales < Boxoffice.International_sales;
List all the movies by their ratings in descending order // SELECT Movies.Title, Boxoffice.Rating
FROM Movies 
JOIN Boxoffice 
ON Movies.Id = Boxoffice.Movie_id
ORDER BY Rating DESC;

LEKCIJA 7.

Find the list of all buildings that have employees  // SELECT DISTINCT building FROM employees;
Find the list of all buildings and their capacity // SELECT  Building_name,Capacity FROM Buildings;
List all buildings and the distinct employee roles in each building (including empty buildings) // SELECT DISTINCT building_name, role 
FROM buildings 
  LEFT JOIN employees
    ON building_name = building;

LEKCIJA 8.
find the name and role of all employees who have not been assigned to a building // SELECT Role,Name FROM employees WHERE Building IS NULL;
Find the names of the buildings that hold no employees // SELECT Building_name FROM Buildings LEFT JOIN Employees ON BuildinG_name = Building WHERE Building IS NULL;

LEKCIJA 9.

List all movies and their combined sales in millions of dollars // SELECT title, (domestic_sales + international_sales) / 1000000 AS millions
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id;
List all movies and their ratings in percent //  SELECT title, rating * 10 AS Percent
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id;
List all movies that were released on even number years //  SELECT title
FROM movies
  JOIN boxoffice
    ON movies.id = boxoffice.movie_id
    WHERE Year % 2 == 0;

LLEKCIJA 10.

Find the longest time that an employee has been at the studio // SELECT MAX(Years_employed) FROM employees;
For each role, find the average number of years employed by employees in that role //  SELECT Role,AVG(Years_employed) FROM employees GROUP BY Role;
Find the total number of employee years worked in each building // 
 SELECT Building,SUM(Years_employed) FROM employees GROUP BY Building;

LEKCIJA 11.

Find the number of Artists in the studio (without a HAVING clause)  // SELECT COUNT(ROLE) FROM employees WHERE ROLE LIKE "ARTIST";
Find the number of Employees of each role in the studio // SELECT Role,COUNT(ROLE) FROM employees GROUP BY ROLE;
Find the total number of years employed by all Engineers // SELECT Role,SUM(Years_employed) FROM employees GROUP BY ROLE HAVING ROLE LIKE "ENGINEER";

LEKCIJA 12.

Find the number of movies each director has directed  // SELECT Director,COUNT(Director) FROM movies GROUP BY DIRECTOR;
Find the total domestic and international sales that can be attributed to each director //  SELECT Director,SUM(Domestic_sales+International_sales) AS total FROM movies JOIN Boxoffice ON Movies.Id = Boxoffice.Movie_id GROUP BY DIRECTOR;

LEKCIJA 13.

Add the studio's new production, Toy Story 4 to the list of movies (you can use any director)  
INSERT INTO movies (Id,Title,Director)
VALUES(15,"Toy Story 4","Dan Schanlon");
Toy Story 4 has been released to critical acclaim! It had a rating of 8.7, and made 340 million domestically and 270 million internationally. Add the record to the BoxOffice table.
// 
INSERT INTO Boxoffice (Movie_id,Rating,Domestic_sales,International_sales)
VALUES(15,8.7,3400000,2700000);


LEKCIJA 14:

The director for A Bug's Life is incorrect, it was actually directed by John Lasseter  // UPDATE movies
SET Director = "John Lasseter"
WHERE Id = 2;

The year that Toy Story 2 was released is incorrect, it was actually released in 1999 // UPDATE movies
SET Year = 1999
WHERE Id = 3;

Both the title and director for Toy Story 8 is incorrect! The title should be "Toy Story 3" and it was directed by Lee Unkrich //  UPDATE movies
SET Title = "Toy Story 3", Director = "Lee Unkrich"
WHERE Id = 11;

LEKCIJA 15.

this database is getting too big, lets remove all movies that were released before 2005. // DELETE FROM movies
WHERE Year < 2005
Andrew Stanton has also left the studio, so please remove all movies directed by him. // DELETE FROM movies
WHERE Director = "Andrew Stanton";